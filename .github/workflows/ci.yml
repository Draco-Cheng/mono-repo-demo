name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches-ignore:
      - main
      - master
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual trigger'
        required: false
        default: 'Manual CI run'

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up base and head refs for nx affected
      - name: Set base and head SHAs
        uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: 'main'

      # Node.js setup & cache
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci --legacy-peer-deps

      # Python setup & backend test (pyproject.toml)
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - run: pip install .
        working-directory: apps/backend
      - run: pytest apps/backend || echo "No backend tests found, skipping."

      # Debug nx affected (optional - can be removed after verification)
      - name: Debug nx affected
        run: |
          echo "Event Name: ${{ github.event_name }}"
          echo "NX_BASE: ${{ env.NX_BASE }}"
          echo "NX_HEAD: ${{ env.NX_HEAD }}"
          echo "Affected projects:"
          npx nx show projects --affected --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }}

      # Identify affected projects
      - name: Identify affected projects
        id: affected-projects
        run: |
          AFFECTED_PROJECTS=$(npx nx show projects --affected --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }} | tr '\n' ' ' | xargs)
          echo "Affected projects: $AFFECTED_PROJECTS"
          {
            echo "projects<<EOF"
            echo "$AFFECTED_PROJECTS"
            echo "EOF"
          } >> $GITHUB_OUTPUT

          # Check if any projects are affected
          if [ -z "$AFFECTED_PROJECTS" ]; then
            echo "No affected projects found"
            echo "has_affected=false" >> $GITHUB_OUTPUT
          else
            echo "has_affected=true" >> $GITHUB_OUTPUT
          fi

      # Nx lint/test/build/typecheck for affected projects
      - name: Lint, test, build, and typecheck affected projects
        if: steps.affected-projects.outputs.has_affected == 'true'
        run: |
          echo "Running checks for affected projects: ${{ steps.affected-projects.outputs.projects }}"
          npx nx affected -t lint test build typecheck --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }}

